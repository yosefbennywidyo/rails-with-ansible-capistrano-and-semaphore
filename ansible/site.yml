- hosts: yosefbennywidyo_digital_ocean

  vars_files:
  - vars/main.yml

  tasks:
    - name: Install Droplet metrics
      shell: |
        curl -sSL https://repos.insights.digitalocean.com/install.sh | sudo bash
      args:
        warn: false

    - include: tasks/user_check/check_root_is_logged_in.yml

    - include: tasks/swap_setup/create_swap_file.yml

    - name: Update all packages to the latest version
      apt:
        upgrade: dist

    - include: tasks/authentication_setup/deploy_user_setup.yml

    - include: tasks/ruby_setup/ruby-install_setup.yml

    - include: tasks/authentication_setup/setup_authorized_key_for_deploy_user.yml

    - include: tasks/user_check/check_deploy_is_logged_in.yml

- hosts: yosefbennywidyo_digital_ocean

  vars_files:
  - vars/main.yml

  roles:
    - { role: rvm.ruby,
        tags: ruby,
        rvm1_rubies: 'ruby-3.0.0',
        rvm1_bundler_install: True,
        rvm1_install_path: '/usr/local/rvm',
        rvm1_install_flags: '--auto-dotfiles',
        rvm1_ruby_install_flags: '--with-jemalloc',
        rvm1_user: 'root',
        rvm1_rvm_check_for_updates: False,
        rvm1_autolib_mode: 3
      }

  tasks:
    - include: tasks/nginx_setup/install_nginx.yml

    - block: # workaround, see https://stackoverflow.com/a/56558842
        - name: PSQL installation and configuration
          include_role:
            name: ANXS.postgresql
          vars:
            postgresql_users:
              - name: deploy
                password: "{{ db_password }}"
      become: true

    - name: Copy puma.service with owner and permissions
      ansible.builtin.copy:
        src: puma.service
        dest: /etc/systemd/system/puma.service
        owner: deploy
        group: root
        mode: '700'

    - name: Upload nginx config
      copy:
        src: tasks/nginx_setup/nginx_config
        dest: /etc/nginx/sites-available/rails
      notify:
        - Restart nginx

    - name: Recursively change directory permission "/home/deploy/apps/"
      ansible.builtin.file:
        path: /home/deploy/apps/
        state: directory
        mode: '700'
        recurse: yes
        owner: deploy
        group: root

    - name: Disable default nginx config
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify:
        - Restart nginx
    - name: Enable nginx config
      file:
        src: /etc/nginx/sites-available/rails
        dest: /etc/nginx/sites-enabled/rails
        state: link
      notify:
        - Restart nginx
  handlers:
    - name: Restart nginx
      service: name=nginx state=restarted
